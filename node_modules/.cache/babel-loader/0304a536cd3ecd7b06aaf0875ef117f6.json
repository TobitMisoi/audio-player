{"ast":null,"code":"var _jsxFileName = \"/home/tobit/private-codes/audio-player/src/App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst campfireStory = 'https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_2MG.mp3';\nconst bootingUp = 'https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3';\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTrack: null,\n      player: \"stopped\"\n    };\n  }\n\n  componentDidMount() {\n    this.player.addEventListener(\"timeupdate\", e => {\n      this.setState({\n        currentTime: e.target.currentTime,\n        duration: e.target.duration\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.player.removeEventListener(\"timeupdate\", e => {});\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedTrack !== prevState.selectedTrack) {\n      let track;\n\n      switch (this.state.selectedTrack) {\n        case \"Campfire story\":\n          track = campfireStory;\n          break;\n\n        case \"Booting up\":\n          track = bootingUp;\n          break;\n\n        default:\n          break;\n      }\n\n      if (track) {\n        this.player.src = track;\n        this.player.play();\n        this.setState({\n          player: \"playing\"\n        });\n      }\n    }\n\n    if (this.state.player !== prevState.player) {\n      if (this.state.player === \"paused\") {\n        this.player.pause();\n      } else if (this.state.player === \"stoppped\") {\n        this.player.pause();\n        this.player.currentTime = 0;\n        this.setState({\n          selectedTrack: null\n        });\n      } else if (this.state.player === \"playing\" && prevState === \"paused\") {\n        this.player.play();\n      }\n    }\n  }\n\n  render() {\n    const list = [{\n      id: 1,\n      title: \"Campfire story\"\n    }, {\n      id: 2,\n      title: \"Booting up\"\n    }].map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => this.setState({\n        selectedTrack: item.title\n      }),\n      children: item.title\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My little player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.player === \"paused\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              player: \"playing\"\n            });\n          },\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), this.state.player === \"playing\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              player: \"paused\"\n            });\n          },\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), this.state.player === \"playing\" || this.state.player === \"paused\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              player: \"stopped\"\n            });\n          },\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 14\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: \"\",\n        ref: ref => this.player = ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/home/tobit/private-codes/audio-player/src/App.js"],"names":["React","Component","campfireStory","bootingUp","App","constructor","props","state","selectedTrack","player","componentDidMount","addEventListener","e","setState","currentTime","target","duration","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","prevState","track","src","play","pause","render","list","id","title","map","item","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,aAAa,GAAG,8EAAtB;AACA,MAAMC,SAAS,GAAG,gFAAlB;AAEA,OAAO,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,IADJ;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAGDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,MAAL,CAAYE,gBAAZ,CAA6B,YAA7B,EAA2CC,CAAC,IAAI;AAC9C,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEF,CAAC,CAACG,MAAF,CAASD,WADV;AAEZE,QAAAA,QAAQ,EAAEJ,CAAC,CAACG,MAAF,CAASC;AAFP,OAAd;AAID,KALD;AAMD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKR,MAAL,CAAYS,mBAAZ,CAAgC,YAAhC,EAA8CN,CAAC,IAAI,CAAG,CAAtD;AACD;;AAGDO,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAI,KAAKd,KAAL,CAAWC,aAAX,KAA6Ba,SAAS,CAACb,aAA3C,EAA0D;AACxD,UAAIc,KAAJ;;AACA,cAAQ,KAAKf,KAAL,CAAWC,aAAnB;AACE,aAAK,gBAAL;AACEc,UAAAA,KAAK,GAAGpB,aAAR;AACA;;AACF,aAAK,YAAL;AACEoB,UAAAA,KAAK,GAAGnB,SAAR;AACA;;AACF;AACE;AARJ;;AAUA,UAAImB,KAAJ,EAAW;AACT,aAAKb,MAAL,CAAYc,GAAZ,GAAkBD,KAAlB;AACA,aAAKb,MAAL,CAAYe,IAAZ;AACA,aAAKX,QAAL,CAAc;AACZJ,UAAAA,MAAM,EAAE;AADI,SAAd;AAGD;AACF;;AAED,QAAI,KAAKF,KAAL,CAAWE,MAAX,KAAsBY,SAAS,CAACZ,MAApC,EAA4C;AAC1C,UAAI,KAAKF,KAAL,CAAWE,MAAX,KAAsB,QAA1B,EAAoC;AAClC,aAAKA,MAAL,CAAYgB,KAAZ;AACD,OAFD,MAEO,IAAI,KAAKlB,KAAL,CAAWE,MAAX,KAAsB,UAA1B,EAAsC;AAC3C,aAAKA,MAAL,CAAYgB,KAAZ;AACA,aAAKhB,MAAL,CAAYK,WAAZ,GAA0B,CAA1B;AACA,aAAKD,QAAL,CAAc;AACZL,UAAAA,aAAa,EAAE;AADH,SAAd;AAGD,OANM,MAMA,IAAI,KAAKD,KAAL,CAAWE,MAAX,KAAsB,SAAtB,IAAmCY,SAAS,KAAK,QAArD,EAA+D;AACpE,aAAKZ,MAAL,CAAYe,IAAZ;AACD;AACF;AAEF;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,CACX;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADW,EAKX;AACED,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE;AAFT,KALW,EASXC,GATW,CASPC,IAAI,iBACR;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKlB,QAAL,CAAc;AAC3BL,QAAAA,aAAa,EAAEuB,IAAI,CAACF;AADO,OAAd,CAFjB;AAAA,gBAMGE,IAAI,CAACF;AANR,OACOE,IAAI,CAACH,EADZ;AAAA;AAAA;AAAA;AAAA,YAVW,CAAb;AAmBA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,mBAEI,KAAKpB,KAAL,CAAWE,MAAX,KAAsB,QAAtB,iBACA;AACE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKI,QAAL,CAAc;AACZJ,cAAAA,MAAM,EAAE;AADI,aAAd;AAGD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAaG,KAAKF,KAAL,CAAWE,MAAX,KAAsB,SAAtB,iBACC;AACE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKI,QAAL,CAAc;AACZJ,cAAAA,MAAM,EAAE;AADI,aAAd;AAGD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,EAwBG,KAAKF,KAAL,CAAWE,MAAX,KAAsB,SAAtB,IAAmC,KAAKF,KAAL,CAAWE,MAAX,KAAsB,QAAzD,gBACE;AACC,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKI,QAAL,CAAc;AACZJ,cAAAA,MAAM,EAAE;AADI,aAAd;AAGD,WALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,GASe,EAjClB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAuCE;AAAO,QAAA,GAAG,EAAC,EAAX;AAAc,QAAA,GAAG,EAAEuB,GAAG,IAAI,KAAKvB,MAAL,GAAcuB;AAAxC;AAAA;AAAA;AAAA;AAAA,cAvCF;AAAA,oBADF;AA2CD;;AA9HgC;AAiInC,eAAe5B,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst campfireStory = 'https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_2MG.mp3';\nconst bootingUp = 'https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selectedTrack: null,\n      player: \"stopped\"\n    }\n  }\n\n\n  componentDidMount() {\n    this.player.addEventListener(\"timeupdate\", e => {\n      this.setState({\n        currentTime: e.target.currentTime,\n        duration: e.target.duration\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.player.removeEventListener(\"timeupdate\", e => { })\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedTrack !== prevState.selectedTrack) {\n      let track;\n      switch (this.state.selectedTrack) {\n        case \"Campfire story\":\n          track = campfireStory\n          break;\n        case \"Booting up\":\n          track = bootingUp\n          break;\n        default:\n          break;\n      }\n      if (track) {\n        this.player.src = track;\n        this.player.play();\n        this.setState({\n          player: \"playing\"\n        })\n      }\n    }\n\n    if (this.state.player !== prevState.player) {\n      if (this.state.player === \"paused\") {\n        this.player.pause()\n      } else if (this.state.player === \"stoppped\") {\n        this.player.pause();\n        this.player.currentTime = 0;\n        this.setState({\n          selectedTrack: null\n        })\n      } else if (this.state.player === \"playing\" && prevState === \"paused\") {\n        this.player.play()\n      }\n    }\n\n  }\n\n  render() {\n    const list = [\n      {\n        id: 1,\n        title: \"Campfire story\"\n      },\n      {\n        id: 2,\n        title: \"Booting up\"\n      }\n    ].map(item => (\n      <li\n        key={item.id}\n        onClick={() => this.setState({\n          selectedTrack: item.title\n        })}\n      >\n        {item.title}\n      </li>\n    ))\n    return (\n      <>\n        <h1>My little player</h1>\n        <ul>{list}</ul>\n        <div>\n          {\n            this.state.player === \"paused\" &&\n            <button\n              onClick={() => {\n                this.setState({\n                  player: \"playing\"\n                })\n              }}\n            >\n              Play\n            </button>\n          }\n          {this.state.player === \"playing\" &&\n            <button\n              onClick={() => {\n                this.setState({\n                  player: \"paused\"\n                })\n              }}\n            >\n              Pause\n            </button>\n          }\n          {this.state.player === \"playing\" || this.state.player === \"paused\" ?\n            (<button\n              onClick={() => {\n                this.setState({\n                  player: \"stopped\"\n                })\n              }}\n            >\n              Stop\n            </button>) : (\"\")\n          }\n        </div>\n        <audio src=\"\" ref={ref => this.player = ref}></audio>\n      </>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}