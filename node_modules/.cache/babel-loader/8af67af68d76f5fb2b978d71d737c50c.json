{"ast":null,"code":"var _jsxFileName = \"/home/tobit/private-codes/audio-player/src/App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst campfireStory = 'https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_2MG.mp3';\nconst bootingUp = 'https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3';\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTrack: null,\n      player: \"stopped\",\n      duration: null,\n      currentTime: null\n    };\n    this.getTime = this.getTime.bind(this);\n  }\n\n  getTime(time) {\n    if (!isNaN(time)) {\n      return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2);\n    }\n  }\n\n  componentDidMount() {\n    this.player.addEventListener(\"timeupdate\", e => {\n      this.setState({\n        currentTime: e.target.currentTime,\n        duration: e.target.duration\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.player.removeEventListener(\"timeupdate\", e => {});\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedTrack !== prevState.selectedTrack) {\n      let track;\n\n      switch (this.state.selectedTrack) {\n        case \"Campfire story\":\n          track = campfireStory;\n          break;\n\n        case \"Booting up\":\n          track = bootingUp;\n          break;\n\n        default:\n          break;\n      }\n\n      if (track) {\n        this.player.src = track;\n        this.player.play();\n        this.setState({\n          player: \"playing\"\n        });\n      }\n    }\n\n    if (this.state.player !== prevState.player) {\n      if (this.state.player === \"paused\") {\n        this.player.pause();\n      } else if (this.state.player === \"stoppped\") {\n        this.player.pause();\n        this.player.currentTime = 0;\n        this.setState({\n          selectedTrack: null\n        });\n      } else if (this.state.player === \"playing\" && prevState === \"paused\") {\n        this.player.play();\n      }\n    }\n  }\n\n  render() {\n    const currentTime = this.getTime(this.state.currentTime);\n    const duration = this.getTime(this.state.durtion);\n    const list = [{\n      id: 1,\n      title: \"Campfire story\"\n    }, {\n      id: 2,\n      title: \"Booting up\"\n    }].map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => this.setState({\n        selectedTrack: item.title\n      }),\n      children: item.title\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My little player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.player === \"paused\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              player: \"playing\"\n            });\n          },\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 14\n        }, this), this.state.player === \"playing\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              player: \"paused\"\n            });\n          },\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), this.state.player === \"playing\" || this.state.player === \"paused\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.setState({\n                player: \"stopped\"\n              });\n            },\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [currentTime, \" / \", duration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: \"\",\n        ref: ref => this.player = ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/home/tobit/private-codes/audio-player/src/App.js"],"names":["React","Component","campfireStory","bootingUp","App","constructor","props","state","selectedTrack","player","duration","currentTime","getTime","bind","time","isNaN","Math","floor","slice","componentDidMount","addEventListener","e","setState","target","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","prevState","track","src","play","pause","render","durtion","list","id","title","map","item","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst campfireStory = 'https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_2MG.mp3';\nconst bootingUp = 'https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selectedTrack: null,\n      player: \"stopped\",\n      duration: null,\n      currentTime: null\n    }\n    this.getTime = this.getTime.bind(this);\n  }\n\n  getTime(time) {\n    if (!isNaN(time)) {\n      return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n    }\n  }\n\n\n  componentDidMount() {\n    this.player.addEventListener(\"timeupdate\", e => {\n      this.setState({\n        currentTime: e.target.currentTime,\n        duration: e.target.duration\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.player.removeEventListener(\"timeupdate\", e => { })\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedTrack !== prevState.selectedTrack) {\n      let track;\n      switch (this.state.selectedTrack) {\n        case \"Campfire story\":\n          track = campfireStory\n          break;\n        case \"Booting up\":\n          track = bootingUp\n          break;\n        default:\n          break;\n      }\n      if (track) {\n        this.player.src = track;\n        this.player.play();\n        this.setState({\n          player: \"playing\"\n        })\n      }\n    }\n\n    if (this.state.player !== prevState.player) {\n      if (this.state.player === \"paused\") {\n        this.player.pause()\n      } else if (this.state.player === \"stoppped\") {\n        this.player.pause();\n        this.player.currentTime = 0;\n        this.setState({\n          selectedTrack: null\n        })\n      } else if (this.state.player === \"playing\" && prevState === \"paused\") {\n        this.player.play()\n      }\n    }\n\n  }\n\n  render() {\n    const currentTime = this.getTime(this.state.currentTime);\n    const duration = this.getTime(this.state.durtion);\n\n\n\n    const list = [\n      {\n        id: 1,\n        title: \"Campfire story\"\n      },\n      {\n        id: 2,\n        title: \"Booting up\"\n      }\n    ].map(item => (\n      <li\n        key={item.id}\n        onClick={() => this.setState({\n          selectedTrack: item.title\n        })}\n      >\n        {item.title}\n      </li>\n    ))\n    return (\n      <>\n        <h1>My little player</h1>\n        <ul>{list}</ul>\n        <div>\n          {this.state.player === \"paused\" &&\n            (<button\n              onClick={() => {\n                this.setState({\n                  player: \"playing\"\n                })\n              }}\n            >\n              Play\n            </button>)\n          }\n          {this.state.player === \"playing\" &&\n            <button\n              onClick={() => {\n                this.setState({\n                  player: \"paused\"\n                })\n              }}\n            >\n              Pause\n            </button>\n          }\n          {this.state.player === \"playing\" || this.state.player === \"paused\" ?\n            (\n              <>\n                <button\n                  onClick={() => {\n                    this.setState({\n                      player: \"stopped\"\n                    })\n                  }}\n                >\n                  Stop\n                </button>\n                <div>\n                  {currentTime} / {duration}\n                </div>\n              </>\n            ) : (\"\")\n          }\n        </div>\n        <audio src=\"\" ref={ref => this.player = ref}></audio>\n      </>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}