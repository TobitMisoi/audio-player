{"ast":null,"code":"// import React, { Component } from 'react';\n// const campfireStory = 'https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_2MG.mp3';\n// const bootingUp = 'https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3';\n// export class App extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       selectedTrack: null,\n//       player: \"stopped\",\n//       duration: null,\n//       currentTime: null\n//     }\n//     this.getTime = this.getTime.bind(this);\n//   }\n//   getTime(time) {\n//     if (!isNaN(time)) {\n//       return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n//     }\n//   }\n//   componentDidMount() {\n//     this.player.addEventListener(\"timeupdate\", e => {\n//       this.setState({\n//         currentTime: e.target.currentTime,\n//         duration: e.target.duration\n//       });\n//     });\n//   }\n//   componentWillUnmount() {\n//     this.player.removeEventListener(\"timeupdate\", e => { })\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.selectedTrack !== prevState.selectedTrack) {\n//       let track;\n//       switch (this.state.selectedTrack) {\n//         case \"Campfire story\":\n//           track = campfireStory\n//           break;\n//         case \"Booting up\":\n//           track = bootingUp\n//           break;\n//         default:\n//           break;\n//       }\n//       if (track) {\n//         this.player.src = track;\n//         this.player.play();\n//         this.setState({\n//           player: \"playing\"\n//         })\n//       }\n//     }\n//     if (this.state.player !== prevState.player) {\n//       if (this.state.player === \"paused\") {\n//         this.player.pause()\n//       } else if (this.state.player === \"stopped\") {\n//         this.player.pause();\n//         this.player.currentTime = 0;\n//         this.setState({\n//           selectedTrack: null\n//         })\n//       } else if (this.state.player === \"playing\" && prevState === \"paused\") {\n//         this.player.play()\n//       }\n//     }\n//   }\n//   render() {\n//     const currentTime = this.getTime(this.state.currentTime);\n//     const duration = this.getTime(this.state.durtion);\n//     const list = [\n//       {\n//         id: 1,\n//         title: \"Campfire story\"\n//       },\n//       {\n//         id: 2,\n//         title: \"Booting up\"\n//       }\n//     ].map(item => (\n//       <li\n//         key={item.id}\n//         onClick={() => this.setState({\n//           selectedTrack: item.title\n//         })}\n//       >\n//         {item.title}\n//       </li>\n//     ))\n//     return (\n//       <>\n//         <h1>My little player</h1>\n//         <ul>{list}</ul>\n//         <div>\n//           {this.state.player === \"paused\" &&\n//             (<button\n//               onClick={() => {\n//                 this.setState({\n//                   player: \"playing\"\n//                 })\n//               }}\n//             >\n//               Play\n//             </button>)\n//           }\n//           {this.state.player === \"playing\" &&\n//             <button\n//               onClick={() => {\n//                 this.setState({\n//                   player: \"paused\"\n//                 })\n//               }}\n//             >\n//               Pause\n//             </button>\n//           }\n//           {this.state.player === \"playing\" || this.state.player === \"paused\" ?\n//             (\n//               <>\n//                 <button\n//                   onClick={() => {\n//                     this.setState({\n//                       player: \"stopped\"\n//                     })\n//                   }}\n//                 >\n//                   Stop\n//                 </button>\n//                 <div>\n//                   {currentTime} / {duration}\n//                 </div>\n//               </>\n//             ) : (\"\")\n//           }\n//         </div>\n//         <audio src=\"\" ref={ref => this.player = ref}></audio>\n//       </>\n//     )\n//   }\n// }\n// export default App","map":{"version":3,"sources":["/home/tobit/private-codes/audio-player/src/App.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from 'react';\n\n// const campfireStory = 'https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_2MG.mp3';\n// const bootingUp = 'https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3';\n\n// export class App extends Component {\n//   constructor(props) {\n//     super(props)\n\n//     this.state = {\n//       selectedTrack: null,\n//       player: \"stopped\",\n//       duration: null,\n//       currentTime: null\n//     }\n//     this.getTime = this.getTime.bind(this);\n//   }\n\n//   getTime(time) {\n//     if (!isNaN(time)) {\n//       return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n//     }\n//   }\n\n\n//   componentDidMount() {\n//     this.player.addEventListener(\"timeupdate\", e => {\n//       this.setState({\n//         currentTime: e.target.currentTime,\n//         duration: e.target.duration\n//       });\n//     });\n//   }\n\n//   componentWillUnmount() {\n//     this.player.removeEventListener(\"timeupdate\", e => { })\n//   }\n\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.selectedTrack !== prevState.selectedTrack) {\n//       let track;\n//       switch (this.state.selectedTrack) {\n//         case \"Campfire story\":\n//           track = campfireStory\n//           break;\n//         case \"Booting up\":\n//           track = bootingUp\n//           break;\n//         default:\n//           break;\n//       }\n//       if (track) {\n//         this.player.src = track;\n//         this.player.play();\n//         this.setState({\n//           player: \"playing\"\n//         })\n//       }\n//     }\n\n//     if (this.state.player !== prevState.player) {\n//       if (this.state.player === \"paused\") {\n//         this.player.pause()\n//       } else if (this.state.player === \"stopped\") {\n//         this.player.pause();\n//         this.player.currentTime = 0;\n//         this.setState({\n//           selectedTrack: null\n//         })\n//       } else if (this.state.player === \"playing\" && prevState === \"paused\") {\n//         this.player.play()\n//       }\n//     }\n\n//   }\n\n//   render() {\n//     const currentTime = this.getTime(this.state.currentTime);\n//     const duration = this.getTime(this.state.durtion);\n\n\n\n//     const list = [\n//       {\n//         id: 1,\n//         title: \"Campfire story\"\n//       },\n//       {\n//         id: 2,\n//         title: \"Booting up\"\n//       }\n//     ].map(item => (\n//       <li\n//         key={item.id}\n//         onClick={() => this.setState({\n//           selectedTrack: item.title\n//         })}\n//       >\n//         {item.title}\n//       </li>\n//     ))\n//     return (\n//       <>\n//         <h1>My little player</h1>\n//         <ul>{list}</ul>\n//         <div>\n//           {this.state.player === \"paused\" &&\n//             (<button\n//               onClick={() => {\n//                 this.setState({\n//                   player: \"playing\"\n//                 })\n//               }}\n//             >\n//               Play\n//             </button>)\n//           }\n//           {this.state.player === \"playing\" &&\n//             <button\n//               onClick={() => {\n//                 this.setState({\n//                   player: \"paused\"\n//                 })\n//               }}\n//             >\n//               Pause\n//             </button>\n//           }\n//           {this.state.player === \"playing\" || this.state.player === \"paused\" ?\n//             (\n//               <>\n//                 <button\n//                   onClick={() => {\n//                     this.setState({\n//                       player: \"stopped\"\n//                     })\n//                   }}\n//                 >\n//                   Stop\n//                 </button>\n//                 <div>\n//                   {currentTime} / {duration}\n//                 </div>\n//               </>\n//             ) : (\"\")\n//           }\n//         </div>\n//         <audio src=\"\" ref={ref => this.player = ref}></audio>\n//       </>\n//     )\n//   }\n// }\n\n// export default App\n"]},"metadata":{},"sourceType":"module"}